name: Build ICS-OpenVPN with Custom App Name, Icon, and Signed Release

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install SWIG
        run: |
          sudo apt-get update
          sudo apt-get install -y swig

      # 修改应用名称为 filereader
      - name: Modify app name to filereader
        run: |
          sed -i 's|<string name="app">.*</string>|<string name="app">filereader</string>|' main/src/main/res/values/strings.xml

      # 替换应用图标
      - name: Replace app icon
        run: |
          echo "${{ secrets.NEW_ICON_BASE64 }}" | base64 -d > new_icon.png
          sudo apt-get install -y imagemagick
          convert new_icon.png -resize 48x48 main/src/main/res/mipmap-mdpi/ic_launcher.png
          convert new_icon.png -resize 72x72 main/src/main/res/mipmap-hdpi/ic_launcher.png
          convert new_icon.png -resize 96x96 main/src/main/res/mipmap-xhdpi/ic_launcher.png
          convert new_icon.png -resize 144x144 main/src/main/res/mipmap-xxhdpi/ic_launcher.png
          convert new_icon.png -resize 192x192 main/src/main/res/mipmap-xxxhdpi/ic_launcher.png
          rm new_icon.png

      - name: Initialize and update submodules
        run: |
          git submodule init
          git submodule update

      - name: Configure Gradle JVM options
        run: |
          echo "org.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=512m -Dfile.encoding=UTF-8" >> gradle.properties

      # 配置签名文件并调试
      - name: Configure signing properties
        env:
          KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          echo "$KEYSTORE_FILE" | base64 -d > my-release-key.jks
          echo "Keystore file size:"
          ls -l my-release-key.jks
          echo "Keystore contents:"
          keytool -list -keystore my-release-key.jks -storepass "$KEYSTORE_PASSWORD"
          cat <<EOF >> gradle.properties
          keystoreFile=$(pwd)/my-release-key.jks
          keystorePassword=$KEYSTORE_PASSWORD
          keystoreAlias=$KEY_ALIAS
          keystoreAliasPassword=$KEY_PASSWORD
          keystoreO2File=$(pwd)/my-release-key.jks
          keystoreO2Password=$KEYSTORE_PASSWORD
          keystoreO2Alias=$KEY_ALIAS
          keystoreO2AliasPassword=$KEY_PASSWORD
          EOF
          echo "Generated gradle.properties:"
          cat gradle.properties

      # 构建项目
      - name: Build with Gradle
        working-directory: ./main
        run: |
          chmod +x ../gradlew
          ../gradlew build --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: filereader-apk
          path: main/build/outputs/apk/**/*.apk
