name: Build ICS-OpenVPN Release with Custom Package Name, App Name, and Icon

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install SWIG
        run: |
          sudo apt-get update
          sudo apt-get install -y swig

      # 修改包名为 com.filereader 并迁移源码和 AIDL
      - name: Modify package name to com.filereader
        run: |
          # 修改 AndroidManifest.xml
          sed -i 's|package="de.blinkt.openvpn"|package="com.filereader"|' main/src/main/AndroidManifest.xml
          # 修改 build.gradle.kts 中的 namespace
          echo "Listing Gradle build files:"
          find . -name "build.gradle" -o -name "build.gradle.kts"
          if [ -f "main/build.gradle.kts" ]; then
            sed -i 's|namespace = "de.blinkt.openvpn"|namespace = "com.filereader"|' main/build.gradle.kts
            echo "Modified main/build.gradle.kts"
          elif [ -f "build.gradle.kts" ]; then
            sed -i 's|namespace = "de.blinkt.openvpn"|namespace = "com.filereader"|' build.gradle.kts
            echo "Modified build.gradle.kts"
          else
            echo "Error: No suitable build.gradle.kts file found!"
            exit 1
          fi
          # 更新源码中的包名引用并移动目录
          find main/src/main/java -type f -exec sed -i 's|de.blinkt.openvpn|com.filereader|g' {} \;
          mkdir -p main/src/main/java/com/filereader
          if [ -d "main/src/main/java/de/blinkt/openvpn" ]; then
            mv main/src/main/java/de/blinkt/openvpn/* main/src/main/java/com/filereader/
            rm -rf main/src/main/java/de/blinkt/openvpn
          fi
          # 更新 AIDL 文件中的包名并移动目录
          find main/src/main/aidl -type f -exec sed -i 's|de.blinkt.openvpn|com.filereader|g' {} \;
          mkdir -p main/src/main/aidl/com/filereader
          if [ -d "main/src/main/aidl/de/blinkt/openvpn" ]; then
            mv main/src/main/aidl/de/blinkt/openvpn/* main/src/main/aidl/com/filereader/
            rm -rf main/src/main/aidl/de/blinkt/openvpn
          fi
          # 修复 OpenVPNService.java - 注释 VariantConfig 相关代码块
          sed -i '/Intent intent = VariantConfig.getOpenUrlIntent/,/return intent;/s|^|// |' main/src/main/java/com/filereader/core/OpenVPNService.java
          # 修复 ProfileManager.java - 注释 ProfileEncryption 相关代码块
          sed -i '/ProfileEncryption.initMasterCryptAlias/,/vpnFileOut = ProfileEncryption.getEncryptedVpOutput/s|^|// |' main/src/main/java/com/filereader/core/ProfileManager.java
          sed -i '/vpInput = ProfileEncryption.getEncryptedVpInput(context, encryptedPath)/,/vpInput = ProfileEncryption.getEncryptedVpInput(context, encryptedPathOld)/s|^|// |' main/src/main/java/com/filereader/core/ProfileManager.java
          # 调试输出
          echo "Modified AndroidManifest.xml:"
          cat main/src/main/AndroidManifest.xml
          echo "Modified build.gradle.kts (if found):"
          grep "namespace" main/build.gradle.kts || grep "namespace" build.gradle.kts || echo "Namespace not found"
          echo "New Java directory structure:"
          ls -R main/src/main/java/com/filereader || echo "No Java files found"
          echo "New AIDL directory structure:"
          ls -R main/src/main/aidl/com/filereader || echo "No AIDL files found"
          echo "Modified OpenVPNService.java snippet (VariantConfig):"
          grep -A 10 -B 10 "VariantConfig" main/src/main/java/com/filereader/core/OpenVPNService.java || echo "VariantConfig not found"
          echo "Modified ProfileManager.java snippet (ProfileEncryption):"
          grep -A 10 -B 10 "ProfileEncryption" main/src/main/java/com/filereader/core/ProfileManager.java || echo "ProfileEncryption not found"

      # 修改应用名称为 filereader
      - name: Modify app name to filereader
        run: |
          sed -i 's|<string name="app">.*</string>|<string name="app">filereader</string>|' main/src/main/res/values/strings.xml
          echo "Modified strings.xml:"
          cat main/src/main/res/values/strings.xml

      # 替换应用图标
      - name: Replace app icon
        run: |
          mkdir -p main/src/main/res/mipmap-mdpi
          mkdir -p main/src/main/res/mipmap-hdpi
          mkdir -p main/src/main/res/mipmap-xhdpi
          mkdir -p main/src/main/res/mipmap-xxhdpi
          mkdir -p main/src/main/res/mipmap-xxxhdpi
          echo "Resource directory structure:"
          ls -R main/src/main/res/
          echo "${{ secrets.NEW_ICON_BASE64 }}" | base64 -d > new_icon.png
          sudo apt-get install -y imagemagick
          convert new_icon.png -resize 48x48 main/src/main/res/mipmap-mdpi/ic_launcher.png
          convert new_icon.png -resize 72x72 main/src/main/res/mipmap-hdpi/ic_launcher.png
          convert new_icon.png -resize 96x96 main/src/main/res/mipmap-xhdpi/ic_launcher.png
          convert new_icon.png -resize 144x144 main/src/main/res/mipmap-xxhdpi/ic_launcher.png
          convert new_icon.png -resize 192x192 main/src/main/res/mipmap-xxxhdpi/ic_launcher.png
          rm new_icon.png

      - name: Initialize and update submodules
        run: |
          git submodule init
          git submodule update

      - name: Configure Gradle JVM options
        run: |
          echo "org.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=512m -Dfile.encoding=UTF-8" >> gradle.properties

      # 配置签名文件并调试
      - name: Configure signing properties
        env:
          KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          echo "$KEYSTORE_FILE" | base64 -d > my-release-key.jks
          echo "Keystore file size:"
          ls -l my-release-key.jks
          echo "Keystore contents:"
          keytool -list -keystore my-release-key.jks -storepass "$KEYSTORE_PASSWORD"
          cat <<EOF >> gradle.properties
          keystoreFile=$(pwd)/my-release-key.jks
          keystorePassword=$KEYSTORE_PASSWORD
          keystoreAlias=$KEY_ALIAS
          keystoreAliasPassword=$KEY_PASSWORD
          keystoreO2File=$(pwd)/my-release-key.jks
          keystoreO2Password=$KEYSTORE_PASSWORD
          keystoreO2Alias=$KEY_ALIAS
          keystoreO2AliasPassword=$KEY_PASSWORD
          EOF
          echo "Generated gradle.properties:"
          cat gradle.properties

      # 只构建 Release 版本
      - name: Build Release with Gradle
        working-directory: ./main
        run: |
          chmod +x ../gradlew
          ../gradlew assembleRelease --stacktrace --info

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: filereader-release-apk
          path: main/build/outputs/apk/**/*.apk
